server.port=8000
spring.application.name=project-broker-api
server.servlet.application-display-name=broker-api
server.servlet.context-path=/api

eureka.client.service-url.defaultZone=https://eureka-server-broker.herokuapp.com/eureka/
#project-broker-api.ribbon.listOfServers= http://localhost:8001



spring.main.allow-bean-definition-overriding=true
spring.mvc.dispatch-options-request=true

eureka.instance.hostname=broker-micro.herokuapp.com
eureka.instance.instanceId=project-broker-api
eureka.instance.non-secure-port=80
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true


#Here we have setup to not create or delete entity as it will be done by order service#
#spring.jpa.hibernate.ddl-auto=none

#For local use 
#spring.jpa.database=POSTGRESQL
#spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://localhost:5432/broker
#spring.datasource.username=postgres
#spring.datasource.password=root
#spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#For deployement
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://ec2-52-211-161-21.eu-west-1.compute.amazonaws.com:5432/d2dmdj0ndip1v
spring.datasource.username=pysbrnomonnppt
spring.datasource.password=553af999936393f36ee67bb823952603fa2fbd6f5ee0328ce2a7523af5fb3568
spring.jpa.show-sql=true




#This will map the bean field and db column with same name,otherwise DB field will be created as _ seperate #
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


